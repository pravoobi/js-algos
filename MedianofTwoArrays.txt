function MedianoftwoArrays(arr1, arr2){
  let arr = [...new Set([...arr1, ...arr2])]
  arr.sort((a,b)=>a-b)
  if(arr.length%2 === 0){
    let lowmid = Math.floor((arr.length-1)/2)
    let highmid = Math.ceil((arr.length-1)/2)
    let median = (arr[lowmid] + arr[highmid])/2;
    console.log(arr[lowmid],arr[highmid] )
    return median
  }else{
    let c = arr[Math.floor(arr.length/2)]
    console.log("c", c, arr.length/2)
    return c
  }
}

console.log(MedianoftwoArrays([1, 2, 3, 4, 5],[2, 3, 4, 5, 6,7]))
console.log(MedianoftwoArrays([0,8,6,7,934949, 2, 4543, 445, 5],[234534, 3345, 4556656, 5453453, 6,9090047]))



/* Median in two sorted and non sorted arrays, with same and different sizes.

Input - ([1,2,3,4],[5,6,7,8,9]), median - 4.5

input - ([1,3,5],[4,2]), median - 3

*/
function MedianOfArrays(arr1, arr2){
  let [fullArray, length, mid] = [[...arr1, ...arr2], 0, 0 ];
  fullArray.sort((a,b) => a-b);
  length = fullArray.length;
  mid = Math.floor(length/2)
  return length%2 == 0 ? (fullArray[mid-1]+fullArray[mid])/2 : fullArray[mid] ;

}

console.log(MedianOfArrays([1,2,3,4],[5,6,7,8]))
