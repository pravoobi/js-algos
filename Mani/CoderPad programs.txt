
// input as string
//1. First repeated number
function firstRChar(str) {
  let splittedValue = str.split('');
  for(let value of splittedValue) { 
     if(str.split(value).length - 1 >= 2) {
     return value;
   }
  }
   return 'There is no repeating numbers';
}

console.log('First Repeated Number is: ' + firstRChar('12334'));


//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



//2. Last repeated number when input as string
function lastRepeatedNumber(str) {
 let splittedValue = str.split('').reverse();   //splitting the given string and reversing the array.
  for(let value of splittedValue) { 
     if(str.split(value).length - 1 >= 2) {    //check if the first repeated value is greater than 1
      return value; 
    }
  }
   return 'There is no repeating numbers';
}

console.log('Last Repeated Number is: ' + lastRepeatedNumber('12334565'));


//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


//3.  First Non Repeating Number
function firstNonRepeating(str) {
  let splittedValue = str.split('');
  for(let value of splittedValue) {
     if(str.split(value).length - 1 == 1) {   //for non repeating the length will be for sure 1. checking if based on that.
     return value;
   }
  }
   return 'There is no repeating numbers';
}

console.log('First Non-Repeated Number is: ' + firstNonRepeating('12312'));



//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>




//4. Last Non Repeating Number

function lastNonRepeatedNumber(str) {
 let splittedValue = str.split('').reverse();   //splitting the given string and reversing the array.
  let index = splittedValue.length;
  for(let value of splittedValue) { 
     if(str.split(value).length - 1 === 1) {    //check if the first repeated value is greater than 1
     return value; 
   }
  }
   return 'There is no repeating numbers';
}

console.log('Last Non-Repeated Number is: ' +lastNonRepeatedNumber('1233456'));




//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



// 5. Most Repeated Number

function repeatedNumbers(num) {

  let repeatedNum= {};
  for(let value of num) {
    if(repeatedNum[value]){   //check if the object key already exists
      repeatedNum[value]++;
    }
  else {
       repeatedNum[value] = 1;  //if not assign the value as 1;
    }
  }
  
  let objValue =  Object.values(repeatedNum);
  
  let maxValue = objValue && objValue.reduce((a,b) => {
    return Math.max(a,b);
  })    //getting the maximum repeating values from the objects
  
  let mostRepeated = Object.keys(repeatedNum).filter((key)=> { return repeatedNum[key] === maxValue });  //filter from the object based on the maximum repeating values given
  
  return mostRepeated.length === 1 ? mostRepeated[0] : rNum(mostRepeated);  //rNum is the method to return if there are multiple repeating number given in an array.
  
}

function rNum(value) {
  let repeatedNumbers = '';
  for(let [index, num] of value.entries()) {
    repeatedNumbers += num  + (index === value.length -1 ? '' : ',');
  }
  return repeatedNumbers;
}
console.log('Most Repeated Number is: ' +repeatedNumbers('1111122232'));



//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>




/* Problem Name is &&& Second Smallest &&& PLEASE DO NOT REMOVE THIS LINE. */

/**
 * Instructions to candidate.
 * 1) Run this code in the REPL to observe its behaviour. The
 *    execution entry point is main().
 * 2) Consider adding some additional tests in doTestsPass().
 * 3) Implement secondSmallest() correctly.
 * 4) If time permits, some possible follow-ups.
 */


/**
 * Returns the second smallest element in the array x.
 * Returns 0 if the array has fewer than 2 elements.
 */
function secondSmallest(x)
{
    
  if(x.length <= 1) { 
    return 0;
  }
  
  let sortedData = x.sort((a,b) => { return a-b });
  return 1;
}


/**
 * Returns true if all tests pass; otherwise, returns false.
 */
function doTestsPass()
{
  // todo: add more test cases
  var testArrays  = [[0], [0,1,2, 1]];
  var testResults = [0, 1];
  
  // Run through the tests and make assertions
  for(var i = 0; i < testArrays.length; i++)
  {
  if(secondSmallest(testArrays[i]) != testResults[i])
  {
    return false;
  }
  }
  return true;
}


/**
 * Main execution entry.
 */
if(doTestsPass())
{
  console.log("samllest number : All tests pass!");
}
else
{
  console.log("There are test failures.");
}


//>>>>>>>>>>>>>>>>>>>>>>>>>>>>

//2-> approach for the smallest element in an array

function secondSmallest(x)
{
   let first = 999;
   let second = 999;   // getting two variable with max value
 if(x.length <= 1) {
   return 0;         //if array length is less than 1 return 0;
 }
  
  for(let value of x) {     //looping the array value
    if(value <= first) {     //itierating if the value of array is less than first value(first value as variable stored with maxvalue)
      
      second = first;     //if so assign the first to second and updating the current value to the first value
      first = value;
    }
    else if(value <= second){  //if iterated value is less than second value(variable stored)
        second = value;    //updating second value as current value
      }
  }
  return second;
}


console.log('Another approach:- second smallest number is ' +secondSmallest([4,3,2,9,1]));


//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



// //input as arrays
// //First repeated number
// function firstRepeatingNumber(num) {
// let repeatedValue = {};  //dummy object

// for(let value of num) {
//     if(repeatedValue[value]){   //check if the object key already exists
//       repeatedValue[value]++;
//     }
//   else {
//        repeatedValue[value] = 1;  //if not assign the value as 1;
//     }
//   }
  
//   //next iteration
//   for(let val of num) { 
//      if(repeatedValue[val] >= 2) {   //if the repeated value is greater than 2 return the first repeated number.
//         return val;
//      }
//   }
//     return 'There is no repeating numbers';  //return the static text when there is no repeated values.
// }

// console.log(firstRepeatingNumber([1,2,3,4]));




//3. best average Grade
function bestAverageGrade(arr) {
  let obj = {};
  for(let [index, value] of arr.entries()) {
    value.forEach((item, index) => {
       if(index % 2 ===0) {
         if(obj[item]){
           obj['dummy_'+ item] = value[index + 1];
         }
         else {
         obj[item] = value[index + 1];
         }
       }
    })
  }
  let maxValue =  Object.values(obj).reduce((a,b) => {
     return Math.max(a,b).toString();
  });
  
  let bestAvgName = Object.keys(obj).filter((key)=> { return obj[key] === maxValue });
  return maxValue + ' by ' + (bestAvgName[0].indexOf('dummy') >= 0 ? bestAvgName[0].split('dummy_')[1] : bestAvgName[0]);
}

console.log( 'Best average score is ' + bestAverageGrade([["jerry","10"],["bob","50"],["jerry","55"],["eric","23"]]));