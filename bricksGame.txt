// You and your friend decide to play a game using a stack consisting of N bricks. In this game, you can alternatively remove 1, 2 or 3 bricks from the top, and the numbers etched on the removed bricks are added to your score. You have to play so that you obtain the maximum possible score. It is given that your friend will also play optimally and you make the first move.

// As an example, bricks are numbered arr=[1,2,3,4,5]. You can remove either[1] = 1, [1,2] = 3 or [1,2,3] = 6. For your friend, your moves would leave the options of 1 to 3  elements from [2,3,4] = 9 leaving 5 for you (total score = 6 ),  [3,4,5] = 12 or [4,5] = 9 . In this case, it will never be optimal for your friend to take fewer than the maximum available number of elements. Your maximum possible score is 6, achievable two ways: 1 first move and 5 the second, or [1,2,3] in your first move.

// Function Description

// Complete the bricksGame function. It should return an integer that represents your maximum possible score.
// bricksGame has the follow
// 1. arr: an array of integers
// Input Format

// The first line will contain an integer , the number of test cases.

// Each of the next  pairs of lines are in the following format: 
// - the number of bricks in . 
// - The next line contains  space-separated integers $arr[i].

// Input : 
// 999 1 1 1 0
// 0 1 1 1 999

// Output: 
// 1001
// 999

function bricksGame(arr){
  let temp, sums = [], dp=[]
  for(let i=0; i < arr.length/2; i++){
    temp = arr[i];
    arr[i] = arr[arr.length - i-1];
    arr[arr.length - i -1] = temp
  }
  for(let i=0; i < arr.length+1; i++){
    sums[i] = (sums[i-1] ? sums[i-1] : 0) + (arr[i-1] ? arr[i-1] : 0) ;
    // console.log("sums", sums)
  }  
  dp[1] = sums[1];
  dp[2] = sums[2];
  dp[3] = sums[3];
  for(let i =4; i < arr.length+1 ; i++){
    dp[i] = Math.max(sums[i]-dp[i-1], Math.max(sums[i]-dp[i-2], sums[i]-dp[i-3]))
  }
  // console.log("dp", dp, sums, arr)
  return dp[arr.length];
}

console.log( bricksGame([999, 1, 1, 1, 0]))
console.log( bricksGame([0, 1, 1, 1, 999]))